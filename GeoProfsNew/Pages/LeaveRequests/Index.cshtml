@page
@model GeoProfsNew.Pages.LeaveRequests.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Inbox</h1>

<div class="dropdown">
    <button class="dropbtn">Filter</button>
    <div class="dropdown-content">
        <button class="tablinks" onclick="openTab(event, 'tab1')">Alle aanvragen</button>
        <button class="tablinks" onclick="openTab(event, 'tab2')">In afwachting</button>
        <button class="tablinks" onclick="openTab(event, 'tab3')">Afgekeurd</button>
        <button class="tablinks" onclick="openTab(event, 'tab4')">Goedgekeurd</button>
    </div>
</div>


<div id="tab1" class="tabcontent" style="user-select: none;">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].DateStart)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].DateEnd)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].Reason)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].Status)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.LeaveRequest)
            {
                <tr>
                    @{
                        var startdateOnly = DateOnly.FromDateTime(item.DateStart);
                    }
                    <td>
                        @startdateOnly
                    </td>
                    @{
                        var endDateOnly = DateOnly.FromDateTime(item.DateEnd);
                    }
                    <td>
                        @endDateOnly
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Reason.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.User.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status.Name)
                    </td>
                    <td>
                        <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a> |
                        <a asp-page="./Details" asp-route-id="@item.Id">Details</a>

                    </td>
                </tr>
            }
        </tbody>
    </table>

</div>
<div id="tab2" class="tabcontent" style="display:none; user-select: none;">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].DateStart)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].DateEnd)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].Reason)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].Status)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.LeaveRequest)
            {
                if (item.Status.Id == 1)
                {
                    <tr>
                        @{
                            var startdateOnly = DateOnly.FromDateTime(item.DateStart);
                        }
                        <td>
                            @startdateOnly
                        </td>
                        @{
                            var endDateOnly = DateOnly.FromDateTime(item.DateEnd);
                        }
                        <td>
                            @endDateOnly
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Reason.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status.Name)
                        </td>
                        <td>
                            <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a> |
                            <a asp-page="./Details" asp-route-id="@item.Id">Details</a>

                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

</div>
<div id="tab3" class="tabcontent" style="display:none; user-select: none;">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].DateStart)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].DateEnd)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].Reason)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].Status)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.LeaveRequest)
            {
                if (item.Status.Id == 2)
                {
                    <tr>
                        @{
                            var startdateOnly = DateOnly.FromDateTime(item.DateStart);
                        }
                        <td>
                            @startdateOnly
                        </td>
                        @{
                            var endDateOnly = DateOnly.FromDateTime(item.DateEnd);
                        }
                        <td>
                            @endDateOnly
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Reason.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status.Name)
                        </td>
                        <td>
                            <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a> |
                            <a asp-page="./Details" asp-route-id="@item.Id">Details</a>

                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

</div>


<div id="tab4" class="tabcontent" style="display:none; user-select: none;">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].DateStart)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].DateEnd)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].Reason)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].Status)
                </th>
                <th></th>
            </tr>
        </thead>

        <tbody>
            @foreach (var item in Model.LeaveRequest)
            {
                if (item.Status.Id == 3)
                {
                    <tr class="tablecell"> 
                        @{
                            var startdateOnly = DateOnly.FromDateTime(item.DateStart);
                        }
                        <td>
                            @startdateOnly
                        </td>
                        @{
                            var endDateOnly = DateOnly.FromDateTime(item.DateEnd);
                        }
                        <td>
                            @endDateOnly
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Reason.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status.Name)
                        </td>
                        <td>
                            <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a> |
                            <a asp-page="./Details" asp-route-id="@item.Id">Details</a>

                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

</div>
