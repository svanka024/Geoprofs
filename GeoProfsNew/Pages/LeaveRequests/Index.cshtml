@page
@model GeoProfsNew.Pages.LeaveRequests.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Inbox</h1>

<div class="dropdown">
    <button class="dropbtn">Filter</button>
    <div class="dropdown-content">
        <button class="tablinks" onclick="openTab(event, 'tab1')">Alle aanvragen</button>
        <button class="tablinks" onclick="openTab(event, 'tab2')">In afwachting</button>
        <button class="tablinks" onclick="openTab(event, 'tab3')">Goedgekeurd</button>
    </div>
</div>


<div id="tab1" class="tabcontent" style="user-select: none;">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].DateStart)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].DateEnd)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].Reason)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].Status)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.LeaveRequest)
            {
                <tr>
                    @{
                        var startdateOnly = DateOnly.FromDateTime(item.DateStart);
                    }
                    <td>
                        @startdateOnly
                    </td>
                    @{
                        var endDateOnly = DateOnly.FromDateTime(item.DateEnd);
                    }
                    <td>
                        @endDateOnly
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Reason.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Status.Name)
                    </td>
                    <td>
                        <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                        <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a> |
                        <a asp-page="./Details" asp-route-id="@item.Id">Details</a>

                    </td>
                </tr>
            }
        </tbody>
    </table>

</div>
<div id="tab2" class="tabcontent" style="display:none; user-select: none;">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].DateStart)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].DateEnd)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].Reason)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].Status)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.LeaveRequest)
            {
                if (item.Status.Id == 1)
                {
                    <tr>
                        @{
                            var startdateOnly = DateOnly.FromDateTime(item.DateStart);
                        }
                        <td>
                            @startdateOnly
                        </td>
                        @{
                            var endDateOnly = DateOnly.FromDateTime(item.DateEnd);
                        }
                        <td>
                            @endDateOnly
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Reason.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status.Name)
                        </td>
                        <td>
                            <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a> |
                            <a asp-page="./Details" asp-route-id="@item.Id">Details</a>

                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

</div>
<div id="tab3" class="tabcontent" style="display:none; user-select: none;">
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].DateStart)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].DateEnd)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].Reason)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LeaveRequest[0].Status)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.LeaveRequest)
            {
                if (item.Status.Id == 2)
                {
                    <tr>
                        @{
                            var startdateOnly = DateOnly.FromDateTime(item.DateStart);
                        }
                        <td>
                            @startdateOnly
                        </td>
                        @{
                            var endDateOnly = DateOnly.FromDateTime(item.DateEnd);
                        }
                        <td>
                            @endDateOnly
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Reason.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Description)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Status.Name)
                        </td>
                        <td>
                            <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a> |
                            <a asp-page="./Details" asp-route-id="@item.Id">Details</a>

                        </td>
                    </tr>
                }
            }
        </tbody>
    </table>

</div>

<script>
    function openTab(evt, tabName) {
        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }
        document.getElementById(tabName).style.display = "block";
        evt.currentTarget.className += " active";
    }
    /* When the user clicks on the button,
    toggle between hiding and showing the dropdown content */
    function myFunction() {
        document.getElementById("myDropdown").classList.toggle("show");
    }
    // Close the dropdown menu if the user clicks outside of it
    window.onclick = function (event) {
        if (!event.target.matches('.dropbtn')) {
            var dropdowns = document.getElementsByClassName("dropdown-content");
            var i;
            for (i = 0; i < dropdowns.length; i++) {
                var openDropdown = dropdowns[i];
                if (openDropdown.classList.contains('show')) {
                    openDropdown.classList.remove('show');
                }
            }
        }
    }
</script>




